apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  labels:
    app: nginx-tls
data:
  default.conf: |
    server {
        listen 443 ssl;
        server_name nginx.example.com;

        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;

        location / {
            proxy_pass http://demo-app:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

  vault-agent-config.hcl: |
    vault {
      address = "http://vault.default.svc:8200"
    }

    auto_auth {
      method "kubernetes" {
        mount_path = "auth/kubernetes"
        config = {
          role = "nginx-role"
        }
      }
      sink "file" {
        config = {
          path = "/home/vault/.vault-token"
        }
      }
    }

    template {
      destination = "/etc/nginx/ssl/tls.crt"
      contents = <<EOT
    {{ with secret "pki-int/issue/nginx" "common_name=nginx.example.com" "store_certificate=true" }}
    {{ .Data.certificate }}
    {{ index .Data.ca_chain 0 }}
    {{ index .Data.ca_chain 1 }}
    {{ end }}
    EOT
     # command = "nginx -s reload"
    }

    template {
      destination = "/etc/nginx/ssl/tls.key"
      contents = <<EOT
    {{ with secret "pki-int/issue/nginx" "common_name=nginx.example.com" "store_certificate=true" }}
    {{ .Data.private_key }}
    {{ end }}
    EOT
    }
